@page "/app/user/edit/{id}"
@inject IUser _user
@inject IJSRuntime JSRuntime
@inject IAuthService AuthService
@inject NavigationManager _navigate
@inject NotificationService NotificationService
<PageTitle>User Edit</PageTitle>
<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>User Edit</h4>
            <h6>Manage your User</h6>
        </div>
        <div class="page-btn">

        </div>
    </div>
    <div class="card">
        <div class="card-body">
			<EditForm Model="user" OnValidSubmit="HandleRegistration">
				<DataAnnotationsValidator />
				<div class="row">
					<div class="col-lg-8 col-sm-6 col-12">
						<div class="form-group">
							<label>Full Name</label>
							<input type="text" @bind="user.FullName">
							<ValidationMessage For="@(() => user.FullName)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>Email</label>
							<input type="text" @bind="user.Email">
							<ValidationMessage For="@(() => user.Email)" />
						</div>
					</div>
					<div class="col-lg-8 col-sm-6 col-12">
						<div class="form-group">
							<label>Address</label>
							<input type="text" @bind="user.Address">
							<ValidationMessage For="@(() => user.Address)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>Role</label>
							<select class="form-select" @bind="user.Role">
								<option value="Admin">Admin</option>
								<option value="User">User</option>
								<option value="Employee">Employee</option>
								<option value="Account">Account</option>
								<option value="Pos">Pos</option>
								<option value="Sales">Sales</option>
								<option value="Purchase">Purchase</option>
							</select>
							<ValidationMessage For="@(() => user.Role)" />
						</div>
					</div>
					<div class="col-lg-12">
						<button type="submit" class="btn btn-submit me-2">Save</button>
						<a href="/app/user" class="btn btn-cancel">Cancel</a>
					</div>

				</div>
			</EditForm>
        </div>
    </div>
</div>
<!-- End Page-content -->
@code {
	[Parameter]
	public string id { get; set; }
	Users user = new Users();
	protected override async Task OnInitializedAsync()
	{
		await LoadData();
	}
	private async Task LoadData()
	{
		user = await _user.GetbyId(Convert.ToInt32(id));
		StateHasChanged();
	}
	async Task HandleRegistration()
	{
		var result = await _user.Update(user);
		var response = await result.Content.ReadFromJsonAsync<Response>();
		if (response.StatusCode == 1)
		{
			ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "", Detail = response.Message, Duration = 3000 });
			_navigate.NavigateTo("/app/user");
			StateHasChanged();
		}
		else
		{
			ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "", Detail = response.Message, Duration = 3000 });
			StateHasChanged();
		}
	}
    void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
    }
}