@page "/app/change-password"
@inject IJSRuntime JSRuntime
@inject IAuthService AuthService
@inject NavigationManager _navigate
@inject NotificationService NotificationService
<PageTitle>Change Password</PageTitle>
<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Change Password</h4>
            <h6>Manage your Password</h6>
        </div>
        <div class="page-btn">

        </div>
    </div>
    <div class="card">
        <div class="card-body">
			<EditForm Model="user" OnValidSubmit="HandleRegistration">
				<DataAnnotationsValidator />
				<div class="row">
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>Password</label>
							<input type="password" @bind="user.Password">
							<ValidationMessage For="@(() => user.Password)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>Confirm Password</label>
							<input type="password" @bind="user.ConfirmPassword">
							<ValidationMessage For="@(() => user.ConfirmPassword)" />
						</div>
					</div>
					<div class="col-lg-12">
						<button type="submit" class="btn btn-submit me-2">Save</button>
						<a href="/app/user" class="btn btn-cancel">Cancel</a>
					</div>

				</div>
			</EditForm>
        </div>
    </div>
</div>
<!-- End Page-content -->
@code {
	UserChangePassword user = new UserChangePassword();
	string strPassword = string.Empty;
	protected override async Task OnInitializedAsync()
	{
		await LoadData();
	}
	private async Task LoadData()
	{
		user.Password = string.Empty;
		user.ConfirmPassword = string.Empty;
		StateHasChanged();
	}
	async Task HandleRegistration()
	{
		var result = await AuthService.ChangePassword(user);
		ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "", Detail = result.Message, Duration = 3000 });
		LoadData();
		StateHasChanged();
	}
    void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
    }
}